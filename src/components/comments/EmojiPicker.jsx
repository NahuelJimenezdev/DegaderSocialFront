// src/components/comments/EmojiPicker.jsx
import React, { useState } from 'react';
import { Smile } from 'lucide-react';

const EMOJI_CATEGORIES = {
  caras: ['üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'ü§£', 'üòÇ', 'üôÇ', 'üôÉ', 'ü´†', 'üòâ', 'üòä', 'üòá', 'ü•∞', 'üòç', 'ü§©', 'üòò', 'üòó', '‚ò∫Ô∏è', 'üòö', 'üòô', 'ü•≤', 'üòã', 'üòõ', 'üòú', 'ü§™', 'üòù'],
  gestos: ['ü§ó', 'ü§î', 'ü§≠', 'ü§´', 'ü§•', 'üò∂', 'üòê', 'üòë', 'üò¨', 'ü´®', 'üôÑ', 'üòØ', 'üò¶', 'üòß', 'üòÆ', 'üò≤', 'ü•±', 'üò¥', 'ü§§', 'üò™', 'üòÆ‚Äçüí®', 'üòµ', 'üòµ‚Äçüí´'],
  emociones: ['üò¢', 'üò≠', 'üò§', 'üò†', 'üò°', 'ü§¨', 'ü§Ø', 'üò≥', 'ü•µ', 'ü•∂', 'üò±', 'üò®', 'üò∞', 'üò•', 'üòì', 'ü§ó', 'ü´£', 'üòñ', 'üò£', 'üòû', 'üòî', 'üòü', 'üòï'],
  corazones: ['‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§ç', 'ü§é', 'üíî', '‚ù£Ô∏è', 'üíï', 'üíû', 'üíì', 'üíó', 'üíñ', 'üíò', 'üíù', 'üíü'],
  manos: ['üëç', 'üëé', 'üëå', 'ü§å', 'ü§è', '‚úåÔ∏è', 'ü§û', 'ü´∞', 'ü§ü', 'ü§ò', 'ü§ô', 'üëà', 'üëâ', 'üëÜ', 'üñï', 'üëá', '‚òùÔ∏è', 'üëã', 'ü§ö', 'üñêÔ∏è', '‚úã', 'üññ', 'üëè', 'üôå'],
  objetos: ['üéâ', 'üéä', 'üéà', 'üéÅ', 'üèÜ', 'ü•á', 'üèÖ', '‚≠ê', 'üåü', 'üí´', '‚ú®', 'üéØ', 'üî•', 'üíØ', '‚úÖ', '‚ùå', 'üí§', 'üí≠', 'üí¨', 'üóØÔ∏è']
};

const EmojiPicker = ({ onEmojiSelect, show, onToggle }) => {
  const [activeCategory, setActiveCategory] = useState('caras');

  if (!show) {
    return (
      <button
        type="button"
        className="btn btn-outline-secondary btn-sm"
        onClick={onToggle}
        title="A√±adir emoji"
      >
        <Smile size={16} />
      </button>
    );
  }

  return (
    <div className="position-relative">
      <button
        type="button"
        className="btn btn-secondary btn-sm"
        onClick={onToggle}
        title="Cerrar emojis"
      >
        <Smile size={16} />
      </button>

      <div
        className="position-absolute bg-white border rounded shadow-lg p-2"
        style={{
          bottom: '100%',
          left: '50%',
          transform: 'translateX(-50%)',
          width: '280px',
          maxWidth: 'calc(100vw - 20px)',
          maxHeight: '250px',
          zIndex: 1050,
          marginBottom: '5px'
        }}
      >
        {/* Pesta√±as de categor√≠as */}
        <div className="d-flex flex-wrap gap-1 mb-2 border-bottom pb-2">
          {Object.keys(EMOJI_CATEGORIES).map(category => (
            <button
              key={category}
              type="button"
              className={`btn btn-sm ${activeCategory === category ? 'btn-primary' : 'btn-outline-secondary'}`}
              onClick={() => setActiveCategory(category)}
              style={{ fontSize: '10px', padding: '2px 6px' }}
            >
              {category}
            </button>
          ))}
        </div>

        {/* Grid de emojis */}
        <div
          className="d-flex flex-wrap gap-1"
          style={{ maxHeight: '150px', overflowY: 'auto' }}
        >
          {EMOJI_CATEGORIES[activeCategory].map((emoji, index) => (
            <button
              key={index}
              type="button"
              className="btn btn-light btn-sm p-1"
              onClick={() => onEmojiSelect(emoji)}
              style={{
                fontSize: '18px',
                lineHeight: '1',
                width: '30px',
                height: '30px'
              }}
              title={emoji}
            >
              {emoji}
            </button>
          ))}
        </div>
      </div>
    </div>
  );
};

export default EmojiPicker;
